#tabla xts
#lo convierto datos una xts
gasolina<-(xts(datos[,2], order.by = datos$X__1))
head(gasolina)
nrow(gasolina)
#creo una sola tabla con todo
consumo_gas<-cbind(fueoleo,GASOLEO,gasolina)
head(consumo_gas)
#summary y plot
summary(consumo_gas)
plot.zoo(x = consumo_gas[ ,c(names(consumo_gas))])
###################################################Series mensuales del precio del petróleo. 1986 Enero - 2018 Septiembre
remove(datos)
datos<-read_xls('precio_petroleo_1968_2018.xls',skip = 7)
#CLEANING
#Pasando a números
head(datos)
class(datos$GASOLINA)
tail(datos, n=10)
l<-str_remove(datos$`Precio del petróleo (barril Brent)`,"\\.")
datos$`Precio del petróleo (barril Brent)`<-str_replace(l,"\\,",".") #HAY QUE PONER DOS PUNTOS SLASHES!!!!!
head(datos)
datos$`Precio del petróleo (barril Brent)`<-as.numeric(datos$`Precio del petróleo (barril Brent)`)
head(datos)
#cleaning dates
#quito espacios en blanco en las fechas
datos$X__1<-stri_trim(datos$X__1)
head(datos$X__1)
#paso las fechas datos español a fechas datos ingles datostedibles por R
datos$X__1<-parse_date(datos$X__1,"%Y %B ",locale=locale("es"))#el primer datos no sale porque tidatose una (p) al final... simplemdatoste lo introduzco a mano
class(datos$X__1)
head(datos$X__1)
#tabla xts
#lo convierto datos una xts
precio_gas<-(xts(datos[,2], order.by = datos$X__1))
head(precio_gas)
nrow(precio_gas)
summary(precio_gas)
plot.xts(precio_gas)#datos en dólares
library(readr)
library(ggplot2)
library(stringi)
library(readr)
library(anytime)
library(astsa)
library(xts)
library(readxl)
library(stringr)
library(dplyr)
library(fpp2)
library(tsbox)
library(RTransferEntropy)
library(ggplot2)
library(future)
#Recopilación de estadísticas de productos derivados del petróleo
setwd("~/Documentos/Rstudio/TFM/Recopilación de estadísticas de productos derivados del petróleo")
############CONSUMO DEL FUELOLEO
remove(datos)
datos<-read_xls('consumo_fueloleo.xls',skip = 7)
#CLEANING
#Pasando a números
head(datos)
datos$FUELÓLEO
class(datos$FUELÓLEO)
tail(datos, n=10)
l<-str_remove(as.character(datos[,2]),"\\.")
l<-str_remove(datos$FUELÓLEO,"\\.")
datos$FUELÓLEO<-str_replace(l,"\\,",".") #HAY QUE PONER DOS PUNTOS SLASHES!!!!!
head(datos)
datos$FUELÓLEO<-as.numeric(datos$FUELÓLEO)
head(datos)
#cleaning dates
#quito espacios en blanco en las fechas
datos$X__1<-stri_trim(datos$X__1)
head(datos$X__1)
#paso las fechas datos español a fechas datos ingles datostedibles por R
datos$X__1<-parse_date(datos$X__1,"%Y %B ",locale=locale("es"))#el primer datos no sale porque tidatose una (p) al final... simplemdatoste lo introduzco a mano
class(datos$X__1)
head(datos$X__1)
#tabla xts
#lo convierto datos una xts
fueoleo<-(xts(datos[,2], order.by = datos$X__1))
head(fueoleo)
nrow(fueoleo)
#Recopilación de estadísticas de productos derivados del petróleo
#################CONSUMO DEL GASOLEO
remove(datos)
datos<-read_xls('consumo_Gasoleo.xls',skip = 7)
#CLEANING
#Pasando a números
head(datos)
datos<-datos[-c(1),]
class(datos$GASÓLEO)
tail(datos, n=10)
l<-str_remove(datos$GASÓLEO,"\\.")
datos$GASÓLEO<-str_replace(l,"\\,",".") #HAY QUE PONER DOS PUNTOS SLASHES!!!!!
head(datos)
datos$GASÓLEO<-as.numeric(datos$GASÓLEO)
head(datos)
#cleaning dates
#quito espacios en blanco en las fechas
datos$X__1<-stri_trim(datos$X__1)
head(datos$X__1)
#paso las fechas datos español a fechas datos ingles datostedibles por R
datos$X__1<-parse_date(datos$X__1,"%Y %B ",locale=locale("es"))#el primer datos no sale porque tidatose una (p) al final... simplemdatoste lo introduzco a mano
class(datos$X__1)
head(datos$X__1)
#tabla xts
#lo convierto datos una xts
GASOLEO<-(xts(datos[,2], order.by = datos$X__1))
head(GASOLEO)
nrow(GASOLEO)
##########################CONSUMO GASOLINA
remove(datos)
datos<-read_xls('consumo_Gasolina.xls',skip = 7)
#CLEANING
#Pasando a números
head(datos)
class(datos$GASOLINA)
tail(datos, n=10)
l<-str_remove(datos$GASOLINA,"\\.")
datos$GASOLINA<-str_replace(l,"\\,",".") #HAY QUE PONER DOS PUNTOS SLASHES!!!!!
head(datos)
datos$GASOLINA<-as.numeric(datos$GASOLINA)
head(datos)
#cleaning dates
#quito espacios en blanco en las fechas
datos$X__1<-stri_trim(datos$X__1)
head(datos$X__1)
#paso las fechas datos español a fechas datos ingles datostedibles por R
datos$X__1<-parse_date(datos$X__1,"%Y %B ",locale=locale("es"))#el primer datos no sale porque tidatose una (p) al final... simplemdatoste lo introduzco a mano
class(datos$X__1)
head(datos$X__1)
#tabla xts
#lo convierto datos una xts
gasolina<-(xts(datos[,2], order.by = datos$X__1))
head(gasolina)
nrow(gasolina)
#creo una sola tabla con todo
consumo_gas<-cbind(fueoleo,GASOLEO,gasolina)
head(consumo_gas)
#summary y plot
summary(consumo_gas)
plot.zoo(x = consumo_gas[ ,c(names(consumo_gas))])
###################################################Series mensuales del precio del petróleo. 1986 Enero - 2018 Septiembre
remove(datos)
datos<-read_xls('precio_petroleo_1968_2018.xls',skip = 7)
#CLEANING
#Pasando a números
head(datos)
class(datos$GASOLINA)
tail(datos, n=10)
l<-str_remove(datos$`Precio del petróleo (barril Brent)`,"\\.")
datos$`Precio del petróleo (barril Brent)`<-str_replace(l,"\\,",".") #HAY QUE PONER DOS PUNTOS SLASHES!!!!!
head(datos)
datos$`Precio del petróleo (barril Brent)`<-as.numeric(datos$`Precio del petróleo (barril Brent)`)
head(datos)
#cleaning dates
#quito espacios en blanco en las fechas
datos$X__1<-stri_trim(datos$X__1)
head(datos$X__1)
#paso las fechas datos español a fechas datos ingles datostedibles por R
datos$X__1<-parse_date(datos$X__1,"%Y %B ",locale=locale("es"))#el primer datos no sale porque tidatose una (p) al final... simplemdatoste lo introduzco a mano
class(datos$X__1)
head(datos$X__1)
#tabla xts
#lo convierto datos una xts
precio_gas<-(xts(datos[,2], order.by = datos$X__1))
head(precio_gas)
nrow(precio_gas)
summary(precio_gas)
plot.xts(precio_gas)#datos en dólares
library(readr)
library(ggplot2)
library(stringi)
library(readr)
library(anytime)
library(astsa)
library(xts)
library(readxl)
library(stringr)
library(dplyr)
library(fpp2)
library(tsbox)
#creyendo que los datos proporcionados por el ISTAC eran datos del IPI corregidos a efectos de calendario etc... bajé los que se supone originales del INE.
#al final estos resultaron ser los mismos... Por lo que supongo que los datos que se encuentran en el ISTAC no son los corregidos
setwd("~/Documentos/Rstudio/TFM/IPI_base(2015)")
datos<-read_xlsx('IPI_ORGINAL.xlsx', na = "", sheet = 2)
datosV<-read_xlsx('IPI_ORGINAL.xlsx', na = "",sheet = 3)
str(datos)
str(datosV)
summary(datos)
tail(datos)
datos <- na.omit(datos, invert = TRUE)
#parse dates
datos$X__1
library("lubridate")
#convierto las fechas a formate
datos$X__1<- parse_date(datos$X__1,"%YM%m")
class(datos$X__1)
head(datos)
#xonvierto a formato xts
datosxts<-(xts(datos[,-1], order.by = datos$X__1))
head(datosxts)
datosxts
plot.zoo(x = datosxts[ ,colnames(datosxts)])
head(datosxts)
IPI<-datosxts
#####################################ENERGÍA#####################################
#Producción bruta, disponibilidad y consumo de energía eléctrica por islas de Canarias y periodos.
setwd("~/Documentos/Rstudio/TFM/Producción_disponibilidad_consumo_energía_eléctricas")
EN<-read_xls('ENERGIA.xls',skip = 7, na = "..", n_max = 333)
#comprobando
head(EN)
str(EN)
tail(EN)
summary(EN)
#limpiando
EN$X__1<-stri_trim(EN$X__1)
#Elimino la primero línea que pone canarias
EN<-EN[-c(1),]
head(EN, n = 10)
#paso las fechas en español a fechas en ingles entedibles por R
EN$X__1<-parse_date(EN$X__1,"%Y %B ",locale=locale("es"))#el primer EN no sale porque tiene una (p) al final... simplemente lo introduzco a mano
class(EN$X__1)
#convierto las cadenas a números
EN[,2:4]<-lapply(EN[,2:4], as.numeric)
head(EN,3)
#lo convierto en una xts
EN<-(xts(EN[,2:4], order.by = EN$X__1))
class(EN)
head(EN)
tail(EN)
summary(EN)
plot.zoo(x = EN[ ,c(names(EN))])
EN_diff<-diff(EN) #PORQUÉ No funciona??
plot.zoo(x = EN_diff[ ,c(names(EN))])
EN$`Consumo de energía eléctrica`
length(x)==length(y)
x = diff(IPI$`Índice general`)
y = diff(EN$`Consumo de energía eléctrica` )
tail(y)
head(y)
head(x)
?cbind.xts
cbind.xts(x,y)
head(cbind.xts(x,y))
head(x)
head(y)
library(tidyr)
drop_na(cbind.xts(x,y))
xy<-cbind.xts(x,y)
xy[rowSums((is.na(xy)))]
xy
xy[rowSums((is.na(xy)))]
rowSums((is.na(xy)))
DF[rowSums(is.na(DF)) <= n,]
xy[rowSums(is.na(xy) <= n,]
xy[rowSums(is.na(xy)) <= n,]
remove_missing(xy)
renyi1d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
#####SIGUIENDO LAS RECETAS DEL PAQUETE
set.seed(1234567890)
renyi1d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
# calculate the X->Y transfer entropy value
te <- sapply(qs, function(q) calc_te(x, y, entropy = "renyi", q = q))
names(te) <- sprintf("q = %.2f", qs)
te
te_shannon <- calc_te(x, y)
te_shannon
text_df <- data.frame(x = 0.25,
y = te_shannon,
lab = sprintf("Shannon's TE = %.4f", te_shannon))
ggplot(data.frame(x = qs, y = te), aes(x = x, y = y)) +
geom_hline(yintercept = te_shannon, color = "red", linetype = "dashed") +
geom_smooth(se = F, color = "black", size = 0.5) +
theme_light() +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",  subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " ")) +
geom_text(data = text_df,
aes(label = lab), color = "red", nudge_y = 0.01)
}
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
return(sh_dt)
}
renyi1d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
renyi2d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
xy<-remove_missing(xy)
renyi1d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
renyi2d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
library(data.table)
renyi1d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
renyi2d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
#return(sh_dt)
}
renyi2d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
x<-xy$Índice.general
x<-xy$Índice.general
y<-xy$Consumo.de.energía.eléctrica
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "shannon",
shuffles = 50, quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "shannon")
tefit
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
q
qdt
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
tefit$obs
tefit$coef
sh_dt
text_df <- data.frame(x = 0.25,
y = te_shannon,
lab = sprintf("Shannon's TE = %.4f", te_shannon))
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 100, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
#return(sh_dt)
}
renyi2d(xy$Índice.general,xy$Consumo.de.energía.eléctrica)
te_shannon<-transfer_entropy(x, y)
te shannon
te_shannon
te_shannon$obs$x
te_shannon$entropy
te_shannon$coef
EAI.R
IPI_IPRI.R
source("aplicacion_IM.R")
setwd("~/Documentos/Rstudio/TFM")
source("aplicacion_IM.R")
source("IPI_IPRI.R")
rm(list=ls())
setwd("~/Documentos/Rstudio/TFM")
source("IPI_O.R")
source("petróleo.R")
source("petróleo.R")
source("petróleo.R")
source("petroleo.R")
source("EIAP.R")
setwd("~/Documentos/Rstudio/TFM")
source("petroleo.R")
source("EIAP.R")
source("tabla_energía")
source("plots_IM.R")
rm(list=ls())
setwd("~/Documentos/Rstudio/TFM")
source("IPI_O.R")
source("petroleo.R")
source("petroleo.R")
source("petroleo.R")
source("IPI_O.R")
source("petroleo.R")
source("plots_IM.R")
setwd("~/Documentos/Rstudio/TFM")
source("plots_IM.R")
rm(list=ls())
setwd("~/Documentos/Rstudio/TFM") #xq cada documento me cambia la ruta
source("IPI_O.R")
setwd("~/Documentos/Rstudio/TFM")
source("petroleo.R")
setwd("~/Documentos/Rstudio/TFM")
source("EIAP.R")
