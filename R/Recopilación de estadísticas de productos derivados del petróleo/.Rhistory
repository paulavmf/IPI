facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = "For American Express (AXP, X) and the S&P 500 Index (Y)")
}
x = diff(coredata(precio_gas$`Precio del petróleo (barril Brent)`[paste(start(consumo_gas$GASÓLEO),end(consumo_gas$GASÓLEO),sep = "/")]))
y = diff(coredata(consumo_gas$GASÓLEO))
length(x)==length(y)
#####SIGUIENDO LAS RECETAS DEL PAQUETE
renyi1d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
te <- sapply(qs, function(q) calc_te(x, y, entropy = "renyi", q = q))
names(te) <- sprintf("q = %.2f", qs)
te
te_shannon <- calc_te(x, y)
te_shannon
text_df <- data.frame(x = 0.25,
y = te_shannon,
lab = sprintf("Shannon's TE = %.4f", te_shannon))
ggplot(data.frame(x = qs, y = te), aes(x = x, y = y)) +
geom_hline(yintercept = te_shannon, color = "red", linetype = "dashed") +
geom_smooth(se = F, color = "black", size = 0.5) +
theme_light() +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q") +
geom_text(data = text_df,
aes(label = lab), color = "red", nudge_y = 0.01)
te_shannon
}
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, quantiles = c(10, 90),
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = "For American Express (AXP, X) and the S&P 500 Index (Y)")
}
renyi1d(x,y)
renyi2d(x,y)
renyi1d(x,y)
x = diff(coredata(precio_gas$`Precio del petróleo (barril Brent)`[paste(start(IPI$`Índice general`),end(IPI$`Índice general`),sep = "/")]))
y = diff(coredata(IPI$`Índice general`))
length(x)==length(y)
renyi1d(x,y)
renyi2d(x,y)
#####SIGUIENDO LAS RECETAS DEL PAQUETE
renyi1d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
te <- sapply(qs, function(q) calc_te(x, y, entropy = "renyi", q = q))
names(te) <- sprintf("q = %.2f", qs)
te
te_shannon <- calc_te(x, y)
te_shannon
text_df <- data.frame(x = 0.25,
y = te_shannon,
lab = sprintf("Shannon's TE = %.4f", te_shannon))
ggplot(data.frame(x = qs, y = te), aes(x = x, y = y)) +
geom_hline(yintercept = te_shannon, color = "red", linetype = "dashed") +
geom_smooth(se = F, color = "black", size = 0.5) +
theme_light() +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q") +
geom_text(data = text_df,
aes(label = lab), color = "red", nudge_y = 0.01)
te_shannon
}
renyi1d(x,y)
#####SIGUIENDO LAS RECETAS DEL PAQUETE
renyi1d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
te <- sapply(qs, function(q) calc_te(x, y, entropy = "renyi", q = q))
names(te) <- sprintf("q = %.2f", qs)
te
te_shannon <- calc_te(x, y)
te_shannon
text_df <- data.frame(x = 0.25,
y = te_shannon,
lab = sprintf("Shannon's TE = %.4f", te_shannon))
ggplot(data.frame(x = qs, y = te), aes(x = x, y = y)) +
geom_hline(yintercept = te_shannon, color = "red", linetype = "dashed") +
geom_smooth(se = F, color = "black", size = 0.5) +
theme_light() +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q") +
geom_text(data = text_df,
aes(label = lab), color = "red", nudge_y = 0.01)
}
renyi1d(x,y)
renyi2d(x,y)
?calc_te
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve estp
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = "For American Express (AXP, X) and the S&P 500 Index (Y)")
}
x = diff(coredata(precio_gas$`Precio del petróleo (barril Brent)`[paste(start(IPI$`Índice general`),end(IPI$`Índice general`),sep = "/")]))
y = diff(coredata(IPI$`Índice general`))
length(x)==length(y)
renyi1d(x,y)
renyi2d(x,y)
#NO ENTIENDO PORQUÉ ME DAN COSAS DIFERENTES
x
#NO ENTIENDO PORQUÉ ME DAN COSAS DIFERENTES
name(x)
#NO ENTIENDO PORQUÉ ME DAN COSAS DIFERENTES
names(x)
#NO ENTIENDO PORQUÉ ME DAN COSAS DIFERENTES
colnames(x)
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y),"shannon entropy ", ete, sep = " "))
}
renyi2d(x,y)
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y),"shannon entropy ", sep = " "))
}
renyi2d(x,y)
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y),";shannon entropy = ",as.character(ete), sep = " "))
}
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
}
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
print(ete)
}
renyi2d(x,y)
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
ete
sh_dt$ete
sh_dt
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
sh_dt
}
tsx= consumo_gas$GASÓLEO
tsy = precio_gas$`Precio del petróleo (barril Brent`()
y<-diff(coredata(tsy[paste(a,b,sep="/")]))
x<-diff(coredata(tsx))
x = diff(coredata(precio_gas$`Precio del petróleo (barril Brent)`[paste(start(consumo_gas$GASÓLEO),end(consumo_gas$GASÓLEO),sep = "/")]))
y = diff(coredata(consumo_gas$GASÓLEO))
length(x)==length(y)
renyi1d(x,y)
renyi2d(x,y)
renyi2d(x,y)
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
sh_dt
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
}
renyi2d(x,y)
x = diff(coredata(precio_gas$`Precio del petróleo (barril Brent)`[paste(start(IPI$`Índice general`),end(IPI$`Índice general`),sep = "/")]))
y = diff(coredata(IPI$`Índice general`))
length(x)==length(y)
renyi1d(x,y)
renyi2d(x,y)
#####UN POCO MÁS PRO
renyi2d<-function(x,y){
qs <- c(seq(0.1, 0.9, 0.1), 0.99)
q_list <- lapply(qs, function(q) {
set.seed(1234567890)
# transfer_entropy will give a warning as nboot < 100
suppressWarnings({
tefit <- transfer_entropy(x, y, lx = 1, ly = 1,
entropy = "Renyi", q = q,
shuffles = 50, #quantiles = c(10, 90), #no pillo para qué sirve esto
nboot = 20, quiet = T)
})
data.table(
q   = q,
dir = c("X->Y", "Y->X"),
coef(tefit)[, 2:3]
)
})
qdt <- rbindlist(q_list)
sh_dt <- data.table(
dir = c("X->Y", "Y->X"),
ete = c(calc_ete(x, y), calc_ete(y, x)) #me da la de shannon
)
qdt[, pe := qnorm(0.95) * se]
ggplot(qdt, aes(x = q, y = ete)) +
geom_hline(yintercept = 0, color = "darkgray") +
geom_hline(data = sh_dt, aes(yintercept = ete), linetype = "dashed",
color = "red") +
geom_point() +
geom_errorbar(aes(ymin = ete - pe, ymax = ete + pe),
width = 0.25/10, col = "blue") +
facet_wrap(~dir) +
labs(x = "Values for q", y = "Renyi's Transfer Entropy",
title = "Renyi's Transfer Entropy for different Values of q",
subtitle = paste("X =",colnames(x),"and","Y =", colnames(y), sep = " "))
return(sh_dt)
}
renyi2d(x,y)
